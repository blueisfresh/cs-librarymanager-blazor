@page "/books/details"
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<LibraryManagementwithBlazor.Data.LibraryManagementwithBlazorContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Book Details</PageTitle>

<div class="p-6 max-w-md mx-auto bg-white rounded-xl shadow-md space-y-4">
    <h3 class="text-xl font-bold text-center">Book Details</h3>
    @if (book is null)
    {
        <p class="text-center text-gray-500"><em>Loading...</em></p>
    }
    else
    {
        <dl class="space-y-2">
            <div class="flex justify-between">
                <dt class="font-medium">Book Number:</dt>
                <dd>@book.BookNum</dd>
            </div>
            <div class="flex justify-between">
                <dt class="font-medium">Title:</dt>
                <dd>@book.Title</dd>
            </div>
            <div class="flex justify-between">
                <dt class="font-medium">Author:</dt>
                <dd>@book.Author</dd>
            </div>
            <div class="flex justify-between">
                <dt class="font-medium">Publisher:</dt>
                <dd>@book.Publisher</dd>
            </div>
            <div class="flex justify-between">
                <dt class="font-medium">ISBN:</dt>
                <dd>@book.ISBN</dd>
            </div>
            <div class="flex justify-between">
                <dt class="font-medium">Publication Place:</dt>
                <dd>@book.PublicationPlace</dd>
            </div>
            <div class="flex justify-between">
                <dt class="font-medium">Publication Date:</dt>
                <dd>@book.PublicationDate</dd>
            </div>
        </dl>
        <div class="flex justify-center space-x-4 mt-4">
            <a href="@($"/books/edit?booknum={book.BookNum}")" class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">
                Edit
            </a>
            <a href="/books" class="px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600">
                Back to List
            </a>
        </div>
    }
</div>

@code {
    private Book? book;

    [SupplyParameterFromQuery]
    private string BookNum { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        book = await context.TblBook.FirstOrDefaultAsync(m => m.BookNum == BookNum);

        if (book is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
