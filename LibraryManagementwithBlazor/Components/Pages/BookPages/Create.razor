@page "/books/create"
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<LibraryManagementwithBlazor.Data.LibraryManagementwithBlazorContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Book</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Book" OnValidSubmit="AddBook" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="Book.Title" class="form-control" /> 
                <ValidationMessage For="() => Book.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="author" class="form-label">Author:</label> 
                <InputText id="author" @bind-Value="Book.Author" class="form-control" /> 
                <ValidationMessage For="() => Book.Author" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="publisher" class="form-label">Publisher:</label> 
                <InputText id="publisher" @bind-Value="Book.Publisher" class="form-control" /> 
                <ValidationMessage For="() => Book.Publisher" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isbn" class="form-label">ISBN:</label> 
                <InputText id="isbn" @bind-Value="Book.ISBN" class="form-control" /> 
                <ValidationMessage For="() => Book.ISBN" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="publicationplace" class="form-label">PublicationPlace:</label> 
                <InputText id="publicationplace" @bind-Value="Book.PublicationPlace" class="form-control" /> 
                <ValidationMessage For="() => Book.PublicationPlace" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="publicationdate" class="form-label">PublicationDate:</label> 
                <InputDate id="publicationdate" @bind-Value="Book.PublicationDate" class="form-control" /> 
                <ValidationMessage For="() => Book.PublicationDate" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/books">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Book Book { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddBook()
    {
        using var context = DbFactory.CreateDbContext();
        context.TblBook.Add(Book);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/books");
    }
}
